name: Deploy to AWS Lambda

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Create .env file
        run: |
          echo "BUCKET_NAME=${{ secrets.BUCKET_NAME }}" > .env
          echo "TABLE_NAME=${{ secrets.TABLE_NAME }}" >> .env
      
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: job-application-tracker
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and push it to ECR
          DOCKER_BUILDKIT=1 docker build --provenance=false --sbom=false -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
      
      - name: Update Lambda Function
        run: |
          if ! aws lambda update-function-code \
            --function-name job-application-tracker \
            --image-uri ${{ steps.build-image.outputs.image }}; then
            echo "Failed to update Lambda function code"
            exit 1
          fi
      
      - name: Update Lambda Environment Variables
        run: |
          aws lambda update-function-configuration \
            --function-name job-application-tracker \
            --environment "Variables={BUCKET_NAME=${{ secrets.BUCKET_NAME }},TABLE_NAME=${{ secrets.TABLE_NAME }}}"
